{"version":3,"file":"static/js/172.0b687c4c.chunk.js","mappings":"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","sources":["components/FilmSearch/filmListItem/FilmListItem.js","components/FilmSearch/filmList/FilmList.js","components/FilmSearch/appSearch/AppSearch.js","components/Form/AppForm.js","components/Header/Header.js","components/skeleton/Skeleton.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\r\n\r\nimport './filmListItem.scss';\r\n\r\nconst FilmListItem = ({thumbnail, title, description, id}) => {\r\n   const navigate = useNavigate()\r\n\r\n   const filmLoader = () => {\r\n      navigate(`/film/${id}`);\r\n   }\r\n\r\n   const img = thumbnail ? thumbnail : 'https://imdb-api.com/images/original/nopicture.jpg'\r\n   return (\r\n      <div className=\"search__item item\" onClick={filmLoader}>\r\n         <div className=\"item__img\">\r\n            <img src={img} alt={`${title}-img`}/>\r\n         </div>\r\n         <div className=\"item__inner\">\r\n            <h1 className=\"item__title\">{title}</h1>\r\n            <p className=\"item__description\">{description}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FilmListItem;\r\n","import { useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nimport FilmListItem from '../filmListItem/FilmListItem';\r\nimport Skeleton from '../../skeleton/Skeleton';\r\nimport './filmList.scss';\r\n\r\n\r\nconst FilmList = () => {\r\n\r\n   const searchStatus = useSelector(state => state.search.searchStatus);\r\n   const searchItems = useSelector(state => {\r\n      if (!state.search.searchShowAll) {return state.search.searchItems.slice(0, 6)}\r\n         return state.search.searchItems;\r\n   });\r\n\r\n   const renderFilms = (arr) => {\r\n      return arr.map(({...props}) => {\r\n         return (\r\n            <CSSTransition\r\n               key={props.id}\r\n               timeout={500}\r\n               classNames=\"my-node\"\r\n               >\r\n               <FilmListItem {...props}/>\r\n            </CSSTransition>\r\n         )\r\n      })\r\n   }\r\n\r\n   let elements = '';\r\n       \r\n   if (searchStatus === \"loading\") {\r\n      return <Skeleton/>;\r\n   } else if (searchStatus === \"error\") {\r\n      return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n   } else if (searchStatus === \"idle\") {\r\n      elements = renderFilms(searchItems);\r\n   }\r\n\r\n   return (\r\n      <TransitionGroup component={null}>\r\n            {elements}\r\n      </TransitionGroup>\r\n   )\r\n\r\n}\r\n\r\nexport default FilmList;\r\n\r\n\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { searchShow } from './searchFilmSlice';\r\n\r\n\r\nimport Header from '../../Header/Header';\r\nimport AppForm from '../../Form/AppForm';\r\nimport FilmList from '../filmList/FilmList';\r\nimport './appSearch.scss';\r\n\r\n\r\nconst AppSearch = () => {\r\n   const dispatch = useDispatch();\r\n   const searchShowAll = useSelector(state => state.search.searchShowAll);\r\n   const showSwitcher = useSelector(state => state.search.searchItems);\r\n   const [swithContent, setSwithContent] = useState('');\r\n\r\n   const showAllFilms = () => {\r\n      dispatch(searchShow());\r\n   }\r\n\r\n   useEffect(() => {\r\n         if (searchShowAll) {\r\n            setSwithContent(swithContent => swithContent = 'Показать часть');\r\n         } else {\r\n            setSwithContent(swithContent => swithContent = 'Показать все');\r\n         }\r\n   }, [searchShowAll]);\r\n\r\n   return (\r\n      <>\r\n         <Header/>\r\n         <div className='search'>\r\n            <div style={showSwitcher.length ? {marginTop: '-250px'} : null} className=\"search__wrapper\">\r\n               <AppForm method={'getSearch'}/>\r\n               <div style={showSwitcher.length ? {visibility: 'visible'} : {visibility: 'hidden'}} className='search__switch btn btn_white' onClick={showAllFilms}>{swithContent}</div>\r\n            </div>\r\n\r\n            <ul className='search__items'>\r\n               <FilmList/>\r\n            </ul>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default AppSearch;\r\n\r\n\r\n\r\n","import { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { searchFetching, searchFetched, searchSetRequest } from '../FilmSearch/appSearch/searchFilmSlice';\r\nimport { actorFetching, actorFetched, actorSetRequest } from '../ActorSearch/appActor/searchActorSlice';\r\nimport imdbServiece from '../../services/imdbService';\r\n\r\nimport './appForm.scss';\r\n\r\nconst AppForm = (method) => {\r\n   const dispatch = useDispatch();\r\n   const searchRequest = useSelector(state => state.search.searchRequest);\r\n   const actorRequest = useSelector(state => state.actor.actorRequest);\r\n   const ref = useRef()\r\n\r\n\r\n   const formRequest = () => {\r\n      if (method.method === 'getSearch') {\r\n         return searchRequest\r\n      } else if (method.method === 'getSearchActor') {\r\n         return actorRequest\r\n      }\r\n   }\r\n\r\n   const {getSearch, getSearchActor} = imdbServiece();\r\n\r\n\r\n   const onSubmitForm = (event) => {\r\n      event.preventDefault();\r\n   }\r\n\r\n   const handlerClick = () => {\r\n      ref.current.style.width = 0;\r\n      ref.current.style.opacity = 0;\r\n   }\r\n\r\n   const onChangeHandler = event => {\r\n      const {value} = event.target;\r\n      if (method.method === 'getSearch') {\r\n         dispatch(searchSetRequest(value));\r\n      } else if (method.method === 'getSearchActor') {\r\n         dispatch(actorSetRequest(value));\r\n      }\r\n      \r\n   }\r\n   \r\n\r\n   const getSearchMethod = () => {\r\n      if (method.method === 'getSearch') {\r\n         getSearch(searchRequest)\r\n         .then(dispatch(searchFetching()))\r\n         .then(data => dispatch(searchFetched(data)))\r\n      } else if (method.method === 'getSearchActor') {\r\n         getSearchActor(actorRequest)\r\n         .then(dispatch(actorFetching()))\r\n         .then(data => dispatch(actorFetched(data)))\r\n      }\r\n   }\r\n   // rer.current.style.width = 0\r\n\r\n   return (\r\n      <>\r\n         <form className=\"search__form form\" onSubmit={onSubmitForm}>\r\n               <div className=\"form__inner\">\r\n                  <div ref={ref} className=\"form__wrapper\"><label htmlFor=\"name\" className=\"form__label\">Писать сюда:</label></div>\r\n                  <input \r\n                     onClick={() => handlerClick()}\r\n                     required\r\n                     type=\"text\" \r\n                     name=\"search\" \r\n                     className=\"form__input\" \r\n                     id=\"search\" \r\n                     placeholder=\"введите...\"\r\n                     value={formRequest()}\r\n                     onChange={onChangeHandler}\r\n                     />\r\n               </div>\r\n               <button className=\"form__button btn btn_white\" type=\"submit\" onClick={getSearchMethod}>Найти</button>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default AppForm;\r\n\r\n\r\n\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n\r\n   const activePage = {\r\n      fontSize: \"22px\",\r\n      color: \"#534aa9\",\r\n   }\r\n\r\n   return (\r\n      <header className=\"search__header header\">\r\n         <nav className=\"header__menu\">\r\n            <ul>\r\n               <li><NavLink style={({isActive}) => isActive ? activePage : undefined} to='/'>Фильмы</NavLink></li>\r\n               /\r\n               <li><NavLink style={({isActive}) => isActive ? activePage : undefined} to='/actor'>Актеры</NavLink></li>\r\n            </ul>\r\n         </nav>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n   return (\r\n      <div className=\"search__skeleton skeleton\">\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Skeleton;"],"names":["thumbnail","title","description","id","navigate","useNavigate","img","className","onClick","src","alt","searchStatus","useSelector","state","search","searchItems","searchShowAll","slice","elements","Skeleton","map","props","CSSTransition","timeout","classNames","TransitionGroup","component","dispatch","useDispatch","showSwitcher","useState","swithContent","setSwithContent","useEffect","Header","style","length","marginTop","AppForm","method","visibility","searchShow","searchRequest","actorRequest","actor","ref","useRef","imdbServiece","getSearch","getSearchActor","onSubmit","event","preventDefault","htmlFor","current","width","opacity","required","type","name","placeholder","value","onChange","target","searchSetRequest","actorSetRequest","then","searchFetching","data","searchFetched","actorFetching","actorFetched","activePage","fontSize","color","isActive","undefined","to"],"sourceRoot":""}