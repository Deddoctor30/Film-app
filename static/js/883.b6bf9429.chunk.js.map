{"version":3,"file":"static/js/883.b6bf9429.chunk.js","mappings":"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","sources":["components/ActorSearch/actorListItem/ActorListItem.js","components/ActorSearch/actorList/ActorList.js","components/ActorSearch/appActor/AppActor.js","components/Form/AppForm.js","components/Header/Header.js","components/skeleton/Skeleton.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\r\n\r\nimport './actorListItem.scss';\r\n\r\nconst ActorListItem = ({thumbnail, title, description, id}) => {\r\n   const navigate = useNavigate();\r\n   const img = thumbnail ? thumbnail : 'https://imdb-api.com/images/original/nopicture.jpg'\r\n   return (\r\n      <div className=\"actors__item\" onClick={() => navigate(`/actor/${id}`)}>\r\n         <div className=\"actors__img\"><img src={img} alt={`${title}-img`} /></div>\r\n         <div className=\"actors__inner\">\r\n            <h1 className=\"actors__title\">{title}</h1>\r\n            <p className=\"actors__description\">{description}</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ActorListItem;","import { useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nimport ActorListItem from '../actorListItem/ActorListItem';\r\nimport Skeleton from '../../skeleton/Skeleton';\r\nimport './actorList.scss';\r\n\r\n\r\nconst ActorList = () => {\r\n\r\n   const actorStatus = useSelector(state => state.actor.actorStatus);\r\n   const actorItems = useSelector(state =>  state.actor.actorItems);\r\n\r\n   const renderFilms = (arr) => {\r\n      return arr.map(({...props}) => {\r\n         return (\r\n            <CSSTransition\r\n            key={props.id}\r\n            timeout={500}\r\n            classNames=\"my-node\">\r\n                <ActorListItem {...props}/>\r\n            </CSSTransition>\r\n         )\r\n      })\r\n   }\r\n\r\n   let elements = '';\r\n       \r\n   if (actorStatus === \"loading\") {\r\n      return <Skeleton/>;\r\n   } else if (actorStatus === \"error\") {\r\n      return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n   } else if (actorStatus === \"idle\") {\r\n      elements = renderFilms(actorItems);\r\n   }\r\n\r\n   return (\r\n      <TransitionGroup component={null}>\r\n            {elements}\r\n      </TransitionGroup>\r\n   )\r\n\r\n}\r\n\r\nexport default ActorList;\r\n\r\n\r\n\r\n","import Header from \"../../Header/Header\";\r\nimport AppForm from \"../../Form/AppForm\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ActorList from \"../actorList/ActorList\";\r\n\r\nimport './appActor.scss';\r\n\r\nconst AppActor = () => {\r\n   const reSizer = useSelector(state => state.actor.actorItems);\r\n   return (\r\n      <>\r\n         <Header/>\r\n         <div className=\"search\">\r\n            <div style={reSizer.length ? {marginTop: '-250px'} : null}  className=\"search__wrapper\">\r\n               <AppForm method={'getSearchActor'}/>\r\n            </div>\r\n            <ul className='search__actors actors'>\r\n                  <ActorList/>\r\n            </ul>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default AppActor;","import { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { searchFetching, searchFetched, searchSetRequest } from '../FilmSearch/appSearch/searchFilmSlice';\r\nimport { actorFetching, actorFetched, actorSetRequest } from '../ActorSearch/appActor/searchActorSlice';\r\nimport imdbServiece from '../../services/imdbService';\r\n\r\nimport './appForm.scss';\r\n\r\nconst AppForm = (method) => {\r\n   const dispatch = useDispatch();\r\n   const searchRequest = useSelector(state => state.search.searchRequest);\r\n   const actorRequest = useSelector(state => state.actor.actorRequest);\r\n   const ref = useRef()\r\n\r\n\r\n   const formRequest = () => {\r\n      if (method.method === 'getSearch') {\r\n         return searchRequest\r\n      } else if (method.method === 'getSearchActor') {\r\n         return actorRequest\r\n      }\r\n   }\r\n\r\n   const {getSearch, getSearchActor} = imdbServiece();\r\n\r\n\r\n   const onSubmitForm = (event) => {\r\n      event.preventDefault();\r\n   }\r\n\r\n   const handlerClick = () => {\r\n      ref.current.style.width = 0;\r\n      ref.current.style.opacity = 0;\r\n   }\r\n\r\n   const onChangeHandler = event => {\r\n      const {value} = event.target;\r\n      if (method.method === 'getSearch') {\r\n         dispatch(searchSetRequest(value));\r\n      } else if (method.method === 'getSearchActor') {\r\n         dispatch(actorSetRequest(value));\r\n      }\r\n      \r\n   }\r\n   \r\n\r\n   const getSearchMethod = () => {\r\n      if (method.method === 'getSearch') {\r\n         getSearch(searchRequest)\r\n         .then(dispatch(searchFetching()))\r\n         .then(data => dispatch(searchFetched(data)))\r\n      } else if (method.method === 'getSearchActor') {\r\n         getSearchActor(actorRequest)\r\n         .then(dispatch(actorFetching()))\r\n         .then(data => dispatch(actorFetched(data)))\r\n      }\r\n   }\r\n   // rer.current.style.width = 0\r\n\r\n   return (\r\n      <>\r\n         <form className=\"search__form form\" onSubmit={onSubmitForm}>\r\n               <div className=\"form__inner\">\r\n                  <div ref={ref} className=\"form__wrapper\"><label htmlFor=\"name\" className=\"form__label\">Писать сюда:</label></div>\r\n                  <input \r\n                     onClick={() => handlerClick()}\r\n                     required\r\n                     type=\"text\" \r\n                     name=\"search\" \r\n                     className=\"form__input\" \r\n                     id=\"search\" \r\n                     placeholder=\"введите...\"\r\n                     value={formRequest()}\r\n                     onChange={onChangeHandler}\r\n                     />\r\n               </div>\r\n               <button className=\"form__button btn btn_white\" type=\"submit\" onClick={getSearchMethod}>Найти</button>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default AppForm;\r\n\r\n\r\n\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n\r\n   const activePage = {\r\n      fontSize: \"22px\",\r\n      color: \"#534aa9\",\r\n   }\r\n\r\n   return (\r\n      <header className=\"search__header header\">\r\n         <nav className=\"header__menu\">\r\n            <ul>\r\n               <li><NavLink style={({isActive}) => isActive ? activePage : undefined} to='/'>Фильмы</NavLink></li>\r\n               /\r\n               <li><NavLink style={({isActive}) => isActive ? activePage : undefined} to='/actor'>Актеры</NavLink></li>\r\n            </ul>\r\n         </nav>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n   return (\r\n      <div className=\"search__skeleton skeleton\">\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n         <div className=\"skeleton__item\">\r\n            <div className=\"pulse skeleton__img\"></div>\r\n            <div className=\"skeleton__inner\">\r\n               <div className=\"pulse skeleton__title\"></div>\r\n               <p className=\"pulse skeleton__description\"></p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Skeleton;"],"names":["thumbnail","title","description","id","navigate","useNavigate","img","className","onClick","src","alt","actorStatus","useSelector","state","actor","actorItems","elements","Skeleton","map","props","CSSTransition","timeout","classNames","TransitionGroup","component","reSizer","Header","style","length","marginTop","AppForm","method","dispatch","useDispatch","searchRequest","search","actorRequest","ref","useRef","imdbServiece","getSearch","getSearchActor","onSubmit","event","preventDefault","htmlFor","current","width","opacity","required","type","name","placeholder","value","onChange","target","searchSetRequest","actorSetRequest","then","searchFetching","data","searchFetched","actorFetching","actorFetched","activePage","fontSize","color","isActive","undefined","to"],"sourceRoot":""}